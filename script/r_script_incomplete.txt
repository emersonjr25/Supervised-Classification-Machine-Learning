library(tidyverse)
library(caret)
library(rpart)
library(rpart.plot)
library(randomForest)

dados <- read.csv("C:/Users/emers/OneDrive/Documentos/Supervisioned-Classification-Machine-Learning-main/data/train.csv")

set.seed(1)

colnames(dados)
dim(dados)
head(dados)

colSums(is.na(dados))

variables <- c('Pclass', 'Sex', 'Age', 'Fare')
X <- dados[, variables]
y <- dados[, 'Survived']

#name and ticket maybe
### dealing with nas ###
nas <- colSums(is.na(X))
X <- X %>%
  select(-names(nas[nas > 0]))
X[, names(X) != names(nas[nas > 0])]

#### transforming data ###
X <- X %>%
  mutate(Sex = recode(X$Sex, 'male' = 0, 'female' = 1))
cor(X)

### separating data and machine learning ###
train_index <- createDataPartition(y, p=0.7, list = FALSE)

X_train <- X[train_index, ]
y_train <- y[train_index]

X_test <- X[-train_index, ]
y_test <- y[-train_index]

### model 1 ###
model1 <- glm(y_train ~ ., data = X_train)
prediction1 <- predict(model1, X_test)
binary_data <- function(data){
  if(data >= 0.5){
    data <- 1
  } else{
    data <- 0
  }
}
prediction1 <- sapply(prediction1, binary_data)
confu_mat_table1 <- table(prediction1, y_test)
confu_mat1 <- confusionMatrix(confu_mat_table1)
accuracy1 <- confu_mat1[['overall']][['Accuracy']]
precision1 <- confu_mat1[['byClass']][['Precision']]
recall1 <- confu_mat1[['byClass']][['Recall']]
F1_1 <- confu_mat1[['byClass']][['F1']]
print(paste('accuracy:', accuracy1, 
            'precision:', precision1, 
            'recall:', recall1,
            'F1:', F1_1))

### model 2 ###
model2 <- randomForest(X_train, y_train, ntree=1000, type='class')
prediction2 <- predict(model2, X_test)
prediction2 <- sapply(prediction2, binary_data)
confu_mat_table2 <- table(prediction2, y_test)
confu_mat2 <- confusionMatrix(confu_mat_table2)
accuracy2 <- confu_mat2[['overall']][['Accuracy']]
precision2 <- confu_mat2[['byClass']][['Precision']]
recall2 <- confu_mat2[['byClass']][['Recall']]
F1_2 <- confu_mat2[['byClass']][['F1']]
print(paste('accuracy:', accuracy2, 
            'precision:', precision2, 
            'recall:', recall2,
            'F1:', F1_2))

### model 3 ###
model3 <- rpart(y_train ~ ., data=X_train, maxdepth=5)
prediction3 <- predict(model3, X_test)
prediction3 <- sapply(prediction3, binary_data)
rpart.plot(model3)
